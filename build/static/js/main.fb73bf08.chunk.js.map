{"version":3,"sources":["component/AddAppointments.js","component/SearchAppointments.js","component/ListAppointments.js","component/App.js","serviceWorker.js","index.js"],"names":["AddAppointments","state","petName","ownerName","aptDate","aptTime","aptNotes","handleChange","bind","handleAdd","e","preventDefault","tempApt","this","props","addApt","setState","hide","target","name","value","className","aptForms","onClick","id","noValidate","onSubmit","htmlFor","readOnly","type","placeholder","onChange","rows","cols","Component","SearchAppointments","aria-label","searchApts","data-toggle","aria-haspopup","aria-expanded","orderBy","href","changeOrder","orderDir","role","ListAppointments","appointments","map","item","key","aid","deleteApt","contentEditable","suppressContentEditableWarning","onBlur","updateInfo","innerText","date","parse","format","App","MyAppointment","queryText","lastIndex","order","dir","tempApts","findIndex","query","apt","unshift","without","fetch","then","response","json","result","apts","filteredApts","sort","a","b","toLowerCase","filter","eachItem","includes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fb73bf08.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport {FaPlus} from 'react-icons/fa';\r\n\r\n\r\n class AddAppointments extends Component{\r\n   constructor(){\r\n     super();\r\n     this.state ={\r\n      petName : '',\r\n      ownerName : '',\r\n      aptDate : '',\r\n      aptTime : '',\r\n      aptNotes :''\r\n     }\r\n     this.handleChange = this.handleChange.bind(this);\r\n     this.handleAdd = this.handleAdd.bind(this);\r\n\r\n   }\r\n\r\n   handleAdd(e){\r\n    e.preventDefault();\r\n    let tempApt = {\r\n      petName : this.state.petName,\r\n      ownerName : this.state.ownerName,\r\n      aptDate : this.state.aptDate + ' '+ this.state.aptTime,\r\n      aptNotes :this.state.aptNotes\r\n    };\r\n    this.props.addApt(tempApt);\r\n    this.setState({\r\n        petName : '',\r\n        ownerName : '',\r\n        aptDate : '',\r\n        aptTime : '',\r\n        aptNotes :''\r\n    });\r\n    this.props.hide();\r\n   }\r\n   handleChange(e){\r\n    const [name, value] =[e.target.name ,e.target.value];\r\n    \r\n    this.setState({\r\n      [name] : value\r\n    })\r\n  }\r\n   \r\n    render(){\r\n        return(\r\n            <div\r\n            className={\r\n              'card textcenter mt-3 ' +\r\n              (this.props.aptForms ? '' : 'add-appointment')\r\n            }\r\n          >\r\n            <div className=\"apt-addheading card-header bg-primary text-white\" onClick = {this.props.hide}>\r\n             <FaPlus /> Add Appointment\r\n            </div>\r\n    \r\n            <div className=\"card-body\">\r\n              <form id=\"aptForm\" noValidate \r\n              onSubmit = {this.handleAdd}>\r\n                <div className=\"form-group form-row\">\r\n                  <label\r\n                    className=\"col-md-2 col-form-label text-md-right\"\r\n                    htmlFor=\"petName\"\r\n                    readOnly\r\n                  >\r\n                    Pet Name\r\n                  </label>\r\n                  <div className=\"col-md-10\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"petName\"\r\n                      placeholder=\"Pet's Name\"\r\n                      value = {this.state.petName}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n    \r\n                <div className=\"form-group form-row\">\r\n                  <label\r\n                    className=\"col-md-2 col-form-label text-md-right\"\r\n                    htmlFor=\"ownerName\"\r\n                  >\r\n                    Pet Owner\r\n                  </label>\r\n                  <div className=\"col-md-10\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"ownerName\"\r\n                      placeholder=\"Owner's Name\"\r\n                      value = {this.state.ownerName}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n    \r\n                <div className=\"form-group form-row\">\r\n                  <label\r\n                    className=\"col-md-2 col-form-label text-md-right\"\r\n                    htmlFor=\"aptDate\"\r\n                  >\r\n                    Date\r\n                  </label>\r\n                  <div className=\"col-md-4\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      name=\"aptDate\"\r\n                      id=\"aptDate\"\r\n                      value = {this.state.aptDate}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                  <label\r\n                    className=\"col-md-2 col-form-label text-md-right\"\r\n                    htmlFor=\"aptTime\"\r\n                  >\r\n                    Time\r\n                  </label>\r\n                  <div className=\"col-md-4\">\r\n                    <input\r\n                      type=\"time\"\r\n                      className=\"form-control\"\r\n                      name=\"aptTime\"\r\n                      id=\"aptTime\"\r\n                      value = {this.state.aptTime}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n    \r\n                <div className=\"form-group form-row\">\r\n                  <label className=\"col-md-2 text-md-right\" htmlFor=\"aptNotes\">\r\n                    Apt. Notes\r\n                  </label>\r\n                  <div className=\"col-md-10\">\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      rows=\"4\"\r\n                      cols=\"50\"\r\n                      name=\"aptNotes\"\r\n                      id=\"aptNotes\"\r\n                      placeholder=\"Appointment Notes\"\r\n                      value = {this.state.aptNotes}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n    \r\n                <div className=\"form-group form-row mb-0\">\r\n                  <div className=\"offset-md-2 col-md-10\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary d-block ml-auto\"\r\n                    >\r\n                      Add Appointment\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\nexport default AddAppointments;","import React,{Component} from 'react'\r\n\r\n\r\n class SearchAppointments extends Component{\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"search-appointments row justify-content-center my-4\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  id=\"SearchApts\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  aria-label=\"Search Appointments\"\r\n                  onChange = {e=>this.props.searchApts(e.target.value)}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary dropdown-toggle\"\r\n                    data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded=\"false\"\r\n                  >\r\n                    Sort by: <span className=\"caret\" />\r\n                  </button>\r\n    \r\n                  <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={\r\n                        'sort-by dropdown-item ' +\r\n                        (this.props.orderBy === 'petName' ? 'active' : '')\r\n                    }href=\"#\"\r\n                    onClick = { e=> this.props.changeOrder ('petName',this.props.orderDir)}>\r\n                      Pet Name\r\n                    </button>\r\n                    <button className={\r\n                        'sort-by dropdown-item ' +\r\n                        (this.props.orderBy === 'aptDate' ? 'active' : '')\r\n                    } href=\"#\"\r\n                    onClick = { e=> this.props.changeOrder ('aptDate',this.props.orderDir)}>\r\n                      Date\r\n                    </button>\r\n                    <button className={\r\n                        'sort-by dropdown-item ' +\r\n                        (this.props.orderBy === 'ownerName' ? 'active' : '')\r\n                    } href=\"#\"\r\n                    onClick = { e=> this.props.changeOrder ('ownerName',this.props.orderDir)}>\r\n                      Owner\r\n                    </button>\r\n                    <div role=\"separator\" className=\"dropdown-divider\" />\r\n                    <button className={\r\n                        'sort-by dropdown-item ' +\r\n                        (this.props.orderDir === 'asc' ? 'active' : '')\r\n                    } href=\"#\"\r\n                    onClick = { e=> this.props.changeOrder (this.props.orderBy,'asc')}>\r\n                      Asc\r\n                    </button>\r\n                    <button className={\r\n                        'sort-by dropdown-item ' +\r\n                        (this.props.orderDir === 'desc' ? 'active' : '')\r\n                    } href=\"#\"\r\n                    onClick = { e=> this.props.changeOrder (this.props.orderBy,'dyesc')}>\r\n                      Desc\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\nexport default SearchAppointments;","import React,{Component} from 'react';\r\nimport {FaTimes} from 'react-icons/fa';\r\nimport Moment from 'react-moment';\r\n\r\n class ListAppointments extends Component{\r\n \r\n    render(){\r\n        return (\r\n            <div className=\"appointment-list item-list mb-3\">\r\n                {this.props.appointments.map(item => (\r\n                    <div className=\"pet-item col media py-3\" key = {item.aid}>\r\n                        <div className=\"mr-3\">\r\n                        <button className=\"pet-delete btn btn-sm btn-danger\" onClick = {()=>this.props.deleteApt(item)}><FaTimes /></button>\r\n                        </div>\r\n\r\n                        <div className=\"pet-info media-body\">\r\n                        <div className=\"pet-head d-flex\">\r\n                            <span className=\"pet-name\"\r\n                            contentEditable suppressContentEditableWarning\r\n                            onBlur={\r\n                                e=> this.props.updateInfo('petName',e.target.innerText, item.aid)\r\n                            }\r\n                            > {item.petName}</span>\r\n                            <span className=\"apt-date ml-auto\">\r\n                                <Moment \r\n                                date= {item.aptDate}\r\n                                parse = \"YYYY-MM-dd hh:mm\"\r\n                                format = \"MMM-D h:mma\"\r\n                                />\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className=\"owner-name\">\r\n                            <span className=\"label-item\">Owner: </span>\r\n                            <span \r\n                             contentEditable suppressContentEditableWarning\r\n                             onBlur={\r\n                                 e=> this.props.updateInfo('ownerName',e.target.innerText, item.aid)\r\n                             }\r\n                            >\r\n                            {item.ownerName}</span>\r\n                        </div>\r\n                        <div className=\"apt-notes\"\r\n                        contentEditable suppressContentEditableWarning\r\n                        onBlur={\r\n                            e=> this.props.updateInfo('aptNotes',e.target.innerText, item.aid)\r\n                        }\r\n                        >{item.aptNotes}</div>\r\n                        </div>\r\n                    </div>\r\n              ))}\r\n             </div>\r\n        );\r\n    }\r\n}\r\nexport default ListAppointments;","import React, { Component } from 'react';\nimport '../css/App.css';\nimport AddAppointments from './AddAppointments'\nimport SearchAppointments from './SearchAppointments'\nimport ListAppointments from './ListAppointments'\nimport {without, findIndex} from 'lodash';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      MyAppointment : [],\n      aptForms : false,\n      orderBy : \"petName\",\n      orderDir : 'asc',\n      queryText : '',\n      lastIndex : 0\n    }\n    this.deleteApt = this.deleteApt.bind(this);\n    this.hide = this.hide.bind(this);\n    this.addApt = this.addApt.bind(this);\n    this.changeOrder = this.changeOrder.bind(this);\n    this.searchApts = this.searchApts.bind(this);\n    this.updateInfo = this.updateInfo.bind(this);\n  }\n\n  changeOrder(order,dir){\n      this.setState({\n        orderBy : order,\n        orderDir : dir\n      })\n  }\n\n  updateInfo(name, value, id){\n    let tempApts = this.state.MyAppointment;\n    let aptIndex = findIndex(this.state.MyAppointment,{\n      aid : id\n    })\n    tempApts[aptIndex][name] = value;\n    this.setState({\n      MyAppointment : tempApts\n    })\n  }\n\n  searchApts(query){\n    this.setState({queryText:query})\n  }\n\n  addApt(apt){\n    let tempApts = this.state.MyAppointment;\n    apt.aid = this.state.lastIndex;\n    tempApts.unshift(apt);\n    this.setState({\n      MyAppointment : tempApts,\n      lastIndex : this.state.lastIndex + 1\n    })\n  }\n\n  hide(){\n      this.setState({\n        aptForms : !this.state.aptForms\n      });\n    }\n\n  deleteApt(apt){\n    let tempApts = this.state.MyAppointment;\n    tempApts = without(tempApts,apt)\n    this.setState({\n      MyAppointment : tempApts\n    })\n  }\n\n  componentDidMount(){\n    fetch('./data.json')\n    .then(response => response.json())\n    .then(result =>{\n      const apts = result.map(item => {\n        item.aid = this.state.lastIndex;\n        this.setState({lastIndex : this.state.lastIndex + 1})\n        return item;\n      })\n      this.setState({\n        MyAppointment : apts\n      });\n    }) \n  }\n\n  render(){\n    let order;\n    let filteredApts = this.state.MyAppointment;\n    if(this.state.orderDir === \"asc\"){\n      order =  1\n    }else{\n      order = -1\n    }\n\n    filteredApts = filteredApts.sort((a,b) => {\n    if (a[this.state.orderBy].toLowerCase() <  b[this.state.orderBy].toLowerCase()) {\n      return -1 * order ;\n    } else {\n      return 1 * order ;\n    } \n    }).filter(eachItem =>{\n      return(\n        eachItem['petName']\n        .toLowerCase()\n        .includes(this.state.queryText.toLowerCase()) ||\n        eachItem['ownerName']\n        .toLowerCase()\n        .includes(this.state.queryText.toLowerCase()) ||\n        eachItem['aptNotes']\n        .toLowerCase()\n        .includes(this.state.queryText.toLowerCase())\n      )\n    });\n\n  return (\n    <main className=\"page bg-white\" id=\"petratings\">\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12 bg-white\">\n          <div className=\"container\">\n            <AddAppointments aptForms = {this.state.aptForms} \n            hide = {this.hide}\n            addApt = {this.addApt}/>\n            <SearchAppointments \n            orderBy = {this.state.orderBy}\n            orderDir = {this.state.orderDir}\n            changeOrder = {this.changeOrder}\n            searchApts = {this.searchApts}\n            />\n            <ListAppointments appointments = {filteredApts}\n            deleteApt = {this.deleteApt}\n            updateInfo = {this.updateInfo}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </main>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/index.css';\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'jquery/dist/jquery';\nimport 'popper.js/dist/umd/popper';\nimport 'bootstrap/dist/js/bootstrap';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}